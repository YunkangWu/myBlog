<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuyk.blog.dao.RelationshipsDoMapper">
    <resultMap id="BaseResultMap" type="com.wuyk.blog.pojo.RelationshipsDoKey">
        <constructor>
            <idArg column="cid" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <idArg column="mid" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="com.wuyk.blog.pojo.RelationshipsDoKey">
        delete
        from t_relationships
        where cid = #{cid,jdbcType=INTEGER}
          and mid = #{mid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.wuyk.blog.pojo.RelationshipsDoKey">
        insert into t_relationships (cid, mid)
        values (#{cid,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.wuyk.blog.pojo.RelationshipsDoKey">
        insert into t_relationships
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                cid,
            </if>
            <if test="mid != null">
                mid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="mid != null">
                #{mid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.wuyk.blog.pojo.vo.RelationshipsVo" resultType="java.lang.Long">
        select count(*) from t_relationships
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <delete id="deleteByExample" parameterType="com.wuyk.blog.pojo.vo.RelationshipsVo">
        delete from t_relationships
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <sql id="Base_Column_List">
        cid, mid
    </sql>
    <select id="selectByExample" parameterType="com.wuyk.blog.pojo.vo.RelationshipsVo"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_relationships
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
</mapper>